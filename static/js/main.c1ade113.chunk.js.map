{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","compare","a","b","getAll","fetch","then","response","json","get5First","sort","slice","getRedGoods","filter","elem","App","useState","setGoods","errorMessage","setErrorMessage","setVisibleGoods","callback","res","catch","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAAOC,MAAO,CAAEC,MAAOF,EAAKE,OAAtD,SACGF,EAAKG,MADCH,EAAKI,UCRpB,SAASC,EAAQC,EAASC,GACxB,OAAID,EAAEH,KAAOI,EAAEJ,MACL,EAGNG,EAAEH,KAAOI,EAAEJ,KACN,EAGF,EAMF,SAASK,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAMgB,KAAKT,GAASU,MAAM,EAAG,OAGnCC,EAAc,WACzB,OAAOR,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAMmB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKhB,aCrBhCiB,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEA,SAASC,EAAgBC,GACvBA,IACGf,MAAK,SAACgB,GACLL,EAASK,MAEVC,OAAM,kBAAMJ,EAAgB,6BAGjC,OACE,sBAAKK,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAgBhB,IAHjC,4BAQA,wBACEqB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EAAgBX,IAHjC,gCAQA,wBACEgB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAgBR,IAHjC,4BAQA,cAAC,EAAD,CAAWlB,MAAOA,IAEjBwB,GAAiBA,MC/CxBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.c1ade113.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\" style={{ color: good.color }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\nfunction compare(a: Good, b: Good) {\n  if (a.name < b.name) {\n    return -1;\n  }\n\n  if (a.name > b.name) {\n    return 1;\n  }\n\n  return 0;\n}\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort(compare).slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(elem => elem.color === 'red')); // get only red\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState([] as Good[]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function setVisibleGoods(callback: () => Promise<Good[]>) {\n    callback()\n      .then((res: Good[]) => {\n        setGoods(res);\n      })\n      .catch(() => setErrorMessage('some error has occured'));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setVisibleGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setVisibleGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setVisibleGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n\n      {errorMessage && (errorMessage)}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}